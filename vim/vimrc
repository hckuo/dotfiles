" Specify a directory for plugins
" - For Neovim: ~/.local/share/nvim/plugged
" - Avoid using standard Vim directory names like 'plugin'
call plug#begin('~/.vim/plugged')

Plug 'scrooloose/nerdtree'
Plug 'tpope/vim-surround'
Plug 'morhetz/gruvbox'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'scrooloose/nerdcommenter'
Plug 'vim-airline/vim-airline'
Plug 'vim-scripts/ctags.vim'
Plug 'majutsushi/tagbar'
Plug 'raimondi/delimitmate'
Plug 'nlknguyen/c-syntax.vim'
Plug 'ntpeters/vim-better-whitespace'
Plug 'junegunn/vim-easy-align'
Plug 'google/yapf', { 'rtp': 'plugins/vim', 'for': 'python' }
Plug 'joshdick/onedark.vim'
Plug 'sheerun/vim-polyglot'
Plug 'lervag/vimtex'
Plug 'lifepillar/vim-mucomplete'
Plug 'vim-scripts/awk.vim'
Plug 'mileszs/ack.vim'
Plug 'suan/vim-instant-markdown'
call plug#end()

let mapleader                         = "\<space>"
let g:config_path                     = $HOME."/.vimrc"
let g:ctrlp_map                       = '<C-F>'
let g:ctrlp_cmd                       = 'CtrlPBuffer'
let g:ctrlp_mruf_relative             = 1
let g:ctrlp_max_depth                 = 40
let g:ctrlp_max_files                 = 0

let g:NERDSpaceDelims                 = 1
let g:NERDCompactSexyComs             = 1
let g:NERDToggleCheckAllLines         = 1
let g:polyglot_disabled               = ['latex']
let g:vimtex_quickfix_open_on_warning = 0
let g:tex_flavor                      = "latex"
let g:instant_markdown_mathjax = 1

if executable('ag')
  " Use Ag over Grep
  set grepprg=ag\ --nogroup\ --nocolor

  " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'

  " ag is fast enough that CtrlP doesn't need to cache
  let g:ctrlp_use_caching = 0
  let g:ackprg = 'ag --vimgrep'
endif

command! EditConfig execute 'edit' g:config_path
command! InstallPlugin execute 'source' g:config_path | PlugInstall

" Esc to exit emulated term
tnoremap <Esc> <C-\><C-n>

" Toggle-related mapping
nnoremap <leader>tb :TagbarToggle<CR>
nnoremap <leader>tn :set invnumber<CR>

" Buffer-related mapping
nnoremap <leader>bn :bnext<CR>
nnoremap <leader>bp :bprevious<CR>
nnoremap <leader><tab> :bprevious<CR>
nnoremap <leader>bl :ls<CR>
nnoremap <leader>bd :bdelete<CR>
"create horizontal buffer"
nnoremap <leader>b" :new<CR>
"create vertical buffer"
nnoremap <leader>b% :vnew<CR>

" File-related mapping
nnoremap <leader>fs :w<CR>
nnoremap <leader>fq :q<CR>
nnoremap <leader>ff :CtrlPCurWD<CR>

" Makefile
nnoremap <leader>mm :make<CR>

" Remove trailing space
nnoremap <leader>rts :%s/\s\+$//e<CR>

xmap ga <Plug>(EasyAlign)
nmap ga <Plug>(EasyAlign)

syntax on
filetype on
filetype indent on
set shell=bash
set wildignore+=*.o
set autowriteall
set tabstop=4
set shiftwidth=4
set timeoutlen=1500
set cc=80
set expandtab
set autoindent smartindent
set completeopt+=menuone
set completeopt+=noselect
set cursorline

autocmd Filetype c,cpp setlocal tabstop=8 noet shiftwidth=8
autocmd BufRead,BufNewFile *.h,*.c set filetype=c

" autocmd FileType plaintex,tex,latex call EnableSpellCheck()
" function EnableSpellCheck()
    " syntax spell toplevel
    " set spell spelllang=en_us
    " highlight SpellBad cterm=underline
" endfunction

